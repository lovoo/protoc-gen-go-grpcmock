// Code generated by protoc-gen-go-grpcmock. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpcmock v1.3.0
// - protoc                 v4.25.1
// - testify                v1.8.4
// source: route_guide.proto

package routeguide

import (
	context "context"
	mock "github.com/stretchr/testify/mock"
	grpc "google.golang.org/grpc"
	metadata "google.golang.org/grpc/metadata"
)

func AnyPoint() mock.AnythingOfTypeArgument {
	return mock.AnythingOfType("*routeguide.Point")
}

func AnyRectangle() mock.AnythingOfTypeArgument {
	return mock.AnythingOfType("*routeguide.Rectangle")
}

func AnyFeature() mock.AnythingOfTypeArgument {
	return mock.AnythingOfType("*routeguide.Feature")
}

func AnyRouteNote() mock.AnythingOfTypeArgument {
	return mock.AnythingOfType("*routeguide.RouteNote")
}

func AnyRouteSummary() mock.AnythingOfTypeArgument {
	return mock.AnythingOfType("*routeguide.RouteSummary")
}

func AnyRouteGuide_ListFeaturesClient() mock.AnythingOfTypeArgument {
	return mock.AnythingOfType("*routeguide.RouteGuide_ListFeaturesClient")
}

func AnyRouteGuide_ListFeaturesServer() mock.AnythingOfTypeArgument {
	return mock.AnythingOfType("*routeguide.RouteGuide_ListFeaturesServer")
}

func AnyRouteGuide_RecordRouteClient() mock.AnythingOfTypeArgument {
	return mock.AnythingOfType("*routeguide.RouteGuide_RecordRouteClient")
}

func AnyRouteGuide_RecordRouteServer() mock.AnythingOfTypeArgument {
	return mock.AnythingOfType("*routeguide.RouteGuide_RecordRouteServer")
}

func AnyRouteGuide_RouteChatClient() mock.AnythingOfTypeArgument {
	return mock.AnythingOfType("*routeguide.RouteGuide_RouteChatClient")
}

func AnyRouteGuide_RouteChatServer() mock.AnythingOfTypeArgument {
	return mock.AnythingOfType("*routeguide.RouteGuide_RouteChatServer")
}

type MockRouteGuideClient struct {
	mock.Mock
}

func NewMockRouteGuideClient() *MockRouteGuideClient {
	return &MockRouteGuideClient{}
}

func (c *MockRouteGuideClient) GetFeature(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Feature, error) {
	opts0 := []interface{}{ctx, in}
	for _, opts1 := range opts {
		opts0 = append(opts0, opts1)
	}
	args := c.Called(opts0...)
	return args.Get(0).(*Feature), args.Error(1)
}

func (c *MockRouteGuideClient) OnGetFeature(ctx interface{}, in interface{}, opts ...interface{}) *mock.Call {
	return c.On("GetFeature", append([]interface{}{ctx, in}, opts...)...)
}

func (c *MockRouteGuideClient) ListFeatures(ctx context.Context, in *Rectangle, opts ...grpc.CallOption) (RouteGuide_ListFeaturesClient, error) {
	opts0 := []interface{}{ctx, in}
	for _, opts1 := range opts {
		opts0 = append(opts0, opts1)
	}
	args := c.Called(opts0...)
	return args.Get(0).(RouteGuide_ListFeaturesClient), args.Error(1)
}

func (c *MockRouteGuideClient) OnListFeatures(ctx interface{}, in interface{}, opts ...interface{}) *mock.Call {
	return c.On("ListFeatures", append([]interface{}{ctx, in}, opts...)...)
}

type MockRouteGuide_ListFeaturesClient struct {
	mock.Mock
}

func NewMockRouteGuide_ListFeaturesClient() *MockRouteGuide_ListFeaturesClient {
	return &MockRouteGuide_ListFeaturesClient{}
}

func (x *MockRouteGuide_ListFeaturesClient) Header() (metadata.MD, error) {
	args := x.Called()
	return args.Get(0).(metadata.MD), args.Error(1)
}

func (x *MockRouteGuide_ListFeaturesClient) Trailer() metadata.MD {
	args := x.Called()
	return args.Get(0).(metadata.MD)
}

func (x *MockRouteGuide_ListFeaturesClient) CloseSend() error {
	args := x.Called()
	return args.Error(0)
}

func (x *MockRouteGuide_ListFeaturesClient) Context() context.Context {
	args := x.Called()
	return args.Get(0).(context.Context)
}

func (x *MockRouteGuide_ListFeaturesClient) SendMsg(m interface{}) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_ListFeaturesClient) RecvMsg(m interface{}) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_ListFeaturesClient) Recv() (*Feature, error) {
	args := x.Called()
	return args.Get(0).(*Feature), args.Error(1)
}

func (x *MockRouteGuide_ListFeaturesClient) OnRecv() *mock.Call {
	return x.On("Recv")
}

func (c *MockRouteGuideClient) RecordRoute(ctx context.Context, opts ...grpc.CallOption) (RouteGuide_RecordRouteClient, error) {
	opts0 := []interface{}{ctx}
	for _, opts1 := range opts {
		opts0 = append(opts0, opts1)
	}
	args := c.Called(opts0...)
	return args.Get(0).(RouteGuide_RecordRouteClient), args.Error(1)
}

func (c *MockRouteGuideClient) OnRecordRoute(ctx interface{}, opts ...interface{}) *mock.Call {
	return c.On("RecordRoute", append([]interface{}{ctx}, opts...)...)
}

type MockRouteGuide_RecordRouteClient struct {
	mock.Mock
}

func NewMockRouteGuide_RecordRouteClient() *MockRouteGuide_RecordRouteClient {
	return &MockRouteGuide_RecordRouteClient{}
}

func (x *MockRouteGuide_RecordRouteClient) Header() (metadata.MD, error) {
	args := x.Called()
	return args.Get(0).(metadata.MD), args.Error(1)
}

func (x *MockRouteGuide_RecordRouteClient) Trailer() metadata.MD {
	args := x.Called()
	return args.Get(0).(metadata.MD)
}

func (x *MockRouteGuide_RecordRouteClient) CloseSend() error {
	args := x.Called()
	return args.Error(0)
}

func (x *MockRouteGuide_RecordRouteClient) Context() context.Context {
	args := x.Called()
	return args.Get(0).(context.Context)
}

func (x *MockRouteGuide_RecordRouteClient) SendMsg(m interface{}) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_RecordRouteClient) RecvMsg(m interface{}) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_RecordRouteClient) Send(m *Point) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_RecordRouteClient) OnSend(m interface{}) *mock.Call {
	return x.On("Send", m)
}

func (x *MockRouteGuide_RecordRouteClient) CloseAndRecv() (*RouteSummary, error) {
	args := x.Called()
	return args.Get(0).(*RouteSummary), args.Error(1)
}

func (x *MockRouteGuide_RecordRouteClient) OnCloseAndRecv() *mock.Call {
	return x.On("CloseAndRecv")
}

func (c *MockRouteGuideClient) RouteChat(ctx context.Context, opts ...grpc.CallOption) (RouteGuide_RouteChatClient, error) {
	opts0 := []interface{}{ctx}
	for _, opts1 := range opts {
		opts0 = append(opts0, opts1)
	}
	args := c.Called(opts0...)
	return args.Get(0).(RouteGuide_RouteChatClient), args.Error(1)
}

func (c *MockRouteGuideClient) OnRouteChat(ctx interface{}, opts ...interface{}) *mock.Call {
	return c.On("RouteChat", append([]interface{}{ctx}, opts...)...)
}

type MockRouteGuide_RouteChatClient struct {
	mock.Mock
}

func NewMockRouteGuide_RouteChatClient() *MockRouteGuide_RouteChatClient {
	return &MockRouteGuide_RouteChatClient{}
}

func (x *MockRouteGuide_RouteChatClient) Header() (metadata.MD, error) {
	args := x.Called()
	return args.Get(0).(metadata.MD), args.Error(1)
}

func (x *MockRouteGuide_RouteChatClient) Trailer() metadata.MD {
	args := x.Called()
	return args.Get(0).(metadata.MD)
}

func (x *MockRouteGuide_RouteChatClient) CloseSend() error {
	args := x.Called()
	return args.Error(0)
}

func (x *MockRouteGuide_RouteChatClient) Context() context.Context {
	args := x.Called()
	return args.Get(0).(context.Context)
}

func (x *MockRouteGuide_RouteChatClient) SendMsg(m interface{}) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_RouteChatClient) RecvMsg(m interface{}) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_RouteChatClient) Send(m *RouteNote) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_RouteChatClient) OnSend(m interface{}) *mock.Call {
	return x.On("Send", m)
}

func (x *MockRouteGuide_RouteChatClient) Recv() (*RouteNote, error) {
	args := x.Called()
	return args.Get(0).(*RouteNote), args.Error(1)
}

func (x *MockRouteGuide_RouteChatClient) OnRecv() *mock.Call {
	return x.On("Recv")
}

type MockRouteGuideServer struct {
	mock.Mock
}

func NewMockRouteGuideServer() *MockRouteGuideServer {
	return &MockRouteGuideServer{}
}

func (s *MockRouteGuideServer) GetFeature(ctx context.Context, in *Point) (*Feature, error) {
	args := s.Called(ctx, in)
	return args.Get(0).(*Feature), args.Error(1)
}

func (s *MockRouteGuideServer) OnGetFeature(ctx interface{}, in interface{}) *mock.Call {
	return s.On("GetFeature", ctx, in)
}

func (s *MockRouteGuideServer) ListFeatures(in *Rectangle, out RouteGuide_ListFeaturesServer) error {
	args := s.Called(in, out)
	return args.Error(0)
}

func (s *MockRouteGuideServer) OnListFeatures(in interface{}, out interface{}) *mock.Call {
	return s.On("ListFeatures", in, out)
}

type MockRouteGuide_ListFeaturesServer struct {
	mock.Mock
}

func NewMockRouteGuide_ListFeaturesServer() *MockRouteGuide_ListFeaturesServer {
	return &MockRouteGuide_ListFeaturesServer{}
}

func (x *MockRouteGuide_ListFeaturesServer) SetHeader(md metadata.MD) error {
	args := x.Called(md)
	return args.Error(0)
}

func (x *MockRouteGuide_ListFeaturesServer) SendHeader(md metadata.MD) error {
	args := x.Called(md)
	return args.Error(0)
}

func (x *MockRouteGuide_ListFeaturesServer) SetTrailer(md metadata.MD) {
	_ = x.Called(md)
}

func (x *MockRouteGuide_ListFeaturesServer) Context() context.Context {
	args := x.Called()
	return args.Get(0).(context.Context)
}

func (x *MockRouteGuide_ListFeaturesServer) SendMsg(m interface{}) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_ListFeaturesServer) RecvMsg(m interface{}) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_ListFeaturesServer) Send(m *Feature) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_ListFeaturesServer) OnSend(m interface{}) *mock.Call {
	return x.On("Send", m)
}

func (s *MockRouteGuideServer) RecordRoute(out RouteGuide_RecordRouteServer) error {
	args := s.Called(out)
	return args.Error(0)
}

func (s *MockRouteGuideServer) OnRecordRoute(out interface{}) *mock.Call {
	return s.On("RecordRoute", out)
}

type MockRouteGuide_RecordRouteServer struct {
	mock.Mock
}

func NewMockRouteGuide_RecordRouteServer() *MockRouteGuide_RecordRouteServer {
	return &MockRouteGuide_RecordRouteServer{}
}

func (x *MockRouteGuide_RecordRouteServer) SetHeader(md metadata.MD) error {
	args := x.Called(md)
	return args.Error(0)
}

func (x *MockRouteGuide_RecordRouteServer) SendHeader(md metadata.MD) error {
	args := x.Called(md)
	return args.Error(0)
}

func (x *MockRouteGuide_RecordRouteServer) SetTrailer(md metadata.MD) {
	_ = x.Called(md)
}

func (x *MockRouteGuide_RecordRouteServer) Context() context.Context {
	args := x.Called()
	return args.Get(0).(context.Context)
}

func (x *MockRouteGuide_RecordRouteServer) SendMsg(m interface{}) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_RecordRouteServer) RecvMsg(m interface{}) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_RecordRouteServer) Recv() (*Point, error) {
	args := x.Called()
	return args.Get(0).(*Point), args.Error(1)
}

func (x *MockRouteGuide_RecordRouteServer) OnRecv() *mock.Call {
	return x.On("Recv")
}

func (x *MockRouteGuide_RecordRouteServer) SendAndClose(m *RouteSummary) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_RecordRouteServer) OnSendAndClose(m interface{}) *mock.Call {
	return x.On("SendAndClose", m)
}

func (s *MockRouteGuideServer) RouteChat(out RouteGuide_RouteChatServer) error {
	args := s.Called(out)
	return args.Error(0)
}

func (s *MockRouteGuideServer) OnRouteChat(out interface{}) *mock.Call {
	return s.On("RouteChat", out)
}

type MockRouteGuide_RouteChatServer struct {
	mock.Mock
}

func NewMockRouteGuide_RouteChatServer() *MockRouteGuide_RouteChatServer {
	return &MockRouteGuide_RouteChatServer{}
}

func (x *MockRouteGuide_RouteChatServer) SetHeader(md metadata.MD) error {
	args := x.Called(md)
	return args.Error(0)
}

func (x *MockRouteGuide_RouteChatServer) SendHeader(md metadata.MD) error {
	args := x.Called(md)
	return args.Error(0)
}

func (x *MockRouteGuide_RouteChatServer) SetTrailer(md metadata.MD) {
	_ = x.Called(md)
}

func (x *MockRouteGuide_RouteChatServer) Context() context.Context {
	args := x.Called()
	return args.Get(0).(context.Context)
}

func (x *MockRouteGuide_RouteChatServer) SendMsg(m interface{}) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_RouteChatServer) RecvMsg(m interface{}) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_RouteChatServer) Recv() (*RouteNote, error) {
	args := x.Called()
	return args.Get(0).(*RouteNote), args.Error(1)
}

func (x *MockRouteGuide_RouteChatServer) OnRecv() *mock.Call {
	return x.On("Recv")
}

func (x *MockRouteGuide_RouteChatServer) Send(m *RouteNote) error {
	args := x.Called(m)
	return args.Error(0)
}

func (x *MockRouteGuide_RouteChatServer) OnSend(m interface{}) *mock.Call {
	return x.On("Send", m)
}
